// Generated by Dagger (https://google.github.io/dagger).
package com.planbcambodia.projectkickstart.di.viewmodelfactory;

import android.arch.lifecycle.ViewModel;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

public final class DaggerAwareViewModelFactory_Factory
    implements Factory<DaggerAwareViewModelFactory> {
  private final Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider;

  public DaggerAwareViewModelFactory_Factory(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    this.creatorsProvider = creatorsProvider;
  }

  @Override
  public DaggerAwareViewModelFactory get() {
    return new DaggerAwareViewModelFactory(creatorsProvider.get());
  }

  public static DaggerAwareViewModelFactory_Factory create(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    return new DaggerAwareViewModelFactory_Factory(creatorsProvider);
  }

  public static DaggerAwareViewModelFactory newDaggerAwareViewModelFactory(
      Map<Class<? extends ViewModel>, Provider<ViewModel>> creators) {
    return new DaggerAwareViewModelFactory(creators);
  }
}
